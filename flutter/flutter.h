/* flutter.h generated by valac 0.10.0, the Vala compiler, do not modify */


#ifndef __FLUTTER_H__
#define __FLUTTER_H__

#include <glib.h>
#include <clutter/clutter.h>
#include <glib-object.h>

G_BEGIN_DECLS


#define FLUTTER_TYPE_CONTAINER (flutter_container_get_type ())
#define FLUTTER_CONTAINER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FLUTTER_TYPE_CONTAINER, FlutterContainer))
#define FLUTTER_IS_CONTAINER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FLUTTER_TYPE_CONTAINER))
#define FLUTTER_CONTAINER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FLUTTER_TYPE_CONTAINER, FlutterContainerIface))

typedef struct _FlutterContainer FlutterContainer;
typedef struct _FlutterContainerIface FlutterContainerIface;

#define FLUTTER_CONTAINER_TYPE_ITERATOR (flutter_container_iterator_get_type ())
#define FLUTTER_CONTAINER_ITERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FLUTTER_CONTAINER_TYPE_ITERATOR, FlutterContainerIterator))
#define FLUTTER_CONTAINER_ITERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FLUTTER_CONTAINER_TYPE_ITERATOR, FlutterContainerIteratorClass))
#define FLUTTER_CONTAINER_IS_ITERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FLUTTER_CONTAINER_TYPE_ITERATOR))
#define FLUTTER_CONTAINER_IS_ITERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FLUTTER_CONTAINER_TYPE_ITERATOR))
#define FLUTTER_CONTAINER_ITERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FLUTTER_CONTAINER_TYPE_ITERATOR, FlutterContainerIteratorClass))

typedef struct _FlutterContainerIterator FlutterContainerIterator;
typedef struct _FlutterContainerIteratorClass FlutterContainerIteratorClass;
typedef struct _FlutterContainerIteratorPrivate FlutterContainerIteratorPrivate;

#define FLUTTER_TYPE_GROUP (flutter_group_get_type ())
#define FLUTTER_GROUP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FLUTTER_TYPE_GROUP, FlutterGroup))
#define FLUTTER_GROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FLUTTER_TYPE_GROUP, FlutterGroupClass))
#define FLUTTER_IS_GROUP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FLUTTER_TYPE_GROUP))
#define FLUTTER_IS_GROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FLUTTER_TYPE_GROUP))
#define FLUTTER_GROUP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FLUTTER_TYPE_GROUP, FlutterGroupClass))

typedef struct _FlutterGroup FlutterGroup;
typedef struct _FlutterGroupClass FlutterGroupClass;
typedef struct _FlutterGroupPrivate FlutterGroupPrivate;

#define FLUTTER_TYPE_STAGE (flutter_stage_get_type ())
#define FLUTTER_STAGE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FLUTTER_TYPE_STAGE, FlutterStage))
#define FLUTTER_STAGE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FLUTTER_TYPE_STAGE, FlutterStageClass))
#define FLUTTER_IS_STAGE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FLUTTER_TYPE_STAGE))
#define FLUTTER_IS_STAGE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FLUTTER_TYPE_STAGE))
#define FLUTTER_STAGE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FLUTTER_TYPE_STAGE, FlutterStageClass))

typedef struct _FlutterStage FlutterStage;
typedef struct _FlutterStageClass FlutterStageClass;
typedef struct _FlutterStagePrivate FlutterStagePrivate;

#define FLUTTER_TYPE_BOX (flutter_box_get_type ())
#define FLUTTER_BOX(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FLUTTER_TYPE_BOX, FlutterBox))
#define FLUTTER_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FLUTTER_TYPE_BOX, FlutterBoxClass))
#define FLUTTER_IS_BOX(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FLUTTER_TYPE_BOX))
#define FLUTTER_IS_BOX_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FLUTTER_TYPE_BOX))
#define FLUTTER_BOX_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FLUTTER_TYPE_BOX, FlutterBoxClass))

typedef struct _FlutterBox FlutterBox;
typedef struct _FlutterBoxClass FlutterBoxClass;
typedef struct _FlutterBoxPrivate FlutterBoxPrivate;

struct _FlutterContainerIface {
	GTypeInterface parent_iface;
};

struct _FlutterContainerIterator {
	GTypeInstance parent_instance;
	volatile int ref_count;
	FlutterContainerIteratorPrivate * priv;
};

struct _FlutterContainerIteratorClass {
	GTypeClass parent_class;
	void (*finalize) (FlutterContainerIterator *self);
};

struct _FlutterGroup {
	ClutterGroup parent_instance;
	FlutterGroupPrivate * priv;
};

struct _FlutterGroupClass {
	ClutterGroupClass parent_class;
};

struct _FlutterStage {
	ClutterStage parent_instance;
	FlutterStagePrivate * priv;
};

struct _FlutterStageClass {
	ClutterStageClass parent_class;
};

struct _FlutterBox {
	ClutterBox parent_instance;
	FlutterBoxPrivate * priv;
};

struct _FlutterBoxClass {
	ClutterBoxClass parent_class;
};


GType flutter_container_get_type (void) G_GNUC_CONST;
gpointer flutter_container_iterator_ref (gpointer instance);
void flutter_container_iterator_unref (gpointer instance);
GParamSpec* flutter_container_param_spec_iterator (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void flutter_container_value_set_iterator (GValue* value, gpointer v_object);
void flutter_container_value_take_iterator (GValue* value, gpointer v_object);
gpointer flutter_container_value_get_iterator (const GValue* value);
GType flutter_container_iterator_get_type (void) G_GNUC_CONST;
FlutterContainerIterator* flutter_container_iterator (FlutterContainer* self);
FlutterContainerIterator* flutter_container_iterator_new (FlutterContainer* _self_);
FlutterContainerIterator* flutter_container_iterator_construct (GType object_type, FlutterContainer* _self_);
gboolean flutter_container_iterator_next (FlutterContainerIterator* self);
ClutterActor* flutter_container_iterator_get (FlutterContainerIterator* self);
GType flutter_group_get_type (void) G_GNUC_CONST;
FlutterGroup* flutter_group_new (void);
FlutterGroup* flutter_group_construct (GType object_type);
GType flutter_stage_get_type (void) G_GNUC_CONST;
FlutterStage* flutter_stage_new (void);
FlutterStage* flutter_stage_construct (GType object_type);
GType flutter_box_get_type (void) G_GNUC_CONST;
FlutterBox* flutter_box_new (void);
FlutterBox* flutter_box_construct (GType object_type);


G_END_DECLS

#endif
